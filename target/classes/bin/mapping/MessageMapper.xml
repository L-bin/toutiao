<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="bin.dao.MessageDAO">
	 <sql id="table">message</sql>
	 <sql id="selectFields">id,from_id,to_id,created_date,content,conversation_id,has_read</sql>
	 <sql id="insertFields">from_id,to_id,created_date,content,conversation_id,has_read</sql>
	 
	<insert id="addMessage" parameterType="bin.model.Message">
		insert into
		<include refid="table"/>
		(
		<include refid="insertFields"/> 
		)
		values(#{fromId},#{toId},#{createdDate},#{content},#{conversationId},#{hasRead})
	</insert>
	
	<select id="getConversationDetail" resultType="bin.model.Message">
		select
		<include refid="selectFields"/>
		from
		<include refid="table"/>
		where conversation_id=#{conversationId}
		order by id desc
		limit #{offset},#{limit}
	</select>
	
	
	<select id="getConversationList" resultType="bin.model.Message">
		select
		<include refid="selectFields"/>,
		count(id) as id
		from
		(
			select 
				<include refid="selectFields"/>
			from 
				<include refid="table"/>
			where from_id=#{userId} or to_id=#{userId}
			order by id desc
		) m
		group by conversation_id 
		order by id desc
		limit #{offset},#{limit}
	</select>
	
	<select id="getConversationUnReadCount" resultType="Integer">
		select
			count(*)
		from
		<include refid="table"/>
		where conversation_id=#{conversationId} and to_id=#{userId} and has_read=0
	</select>
	
	
	<select id="getConversationTotalCount" resultType="Integer">
		select
			count(*)
		from
		<include refid="table"/>
		where conversation_id=#{conversationId}
	</select>
	<!-- 
	<update id="updateMessage" >
		update 
		<include refid="table"/>
		set has_read=1
		where from_id=#{fromId} and to_id=#{toId} and has_read=0
	</update>
	 -->
</mapper>
